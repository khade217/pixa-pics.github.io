/*! For license information please see chunk_12.min.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{1e3:function(e,t,n){"use strict";function a(e,t,n){const a=(t-e)/(n-1),c=r.Si.makeZerosTypedArray(n,"float32");c[0]=e;for(let r=1;r<c.length;r++)c[r]=c[r-1]+a;return c}n.d(t,"a",(function(){return a}));var r=n(616)},1001:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(697),c=n(631);const s=Object(r.a)((e=>Math.log(e))),o=Object(c.b)(a.Ob,s),i={kernelName:a.Ob,backendName:"cpu",kernelFunc:o}},1002:function(e,t,n){"use strict";function a(e,t,n,a){const c=r.Si.getTypedArrayFromDType(a,r.Si.sizeFromShape(n));for(let r=0;r<c.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}c[r]=a}return c}n.d(t,"a",(function(){return a}));var r=n(616)},1003:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>Math.max(e,t))),o=Object(c.a)(a.dc,s),i={kernelName:a.dc,backendName:"cpu",kernelFunc:o}},1004:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>Math.min(e,t))),o=Object(c.a)(a.gc,s),i={kernelName:a.gc,backendName:"cpu",kernelFunc:o}},1005:function(e,t,n){"use strict";function a(e,t,n){const a=r.Si.createScalarValue(-1,n);return Object(s.c)([],t,a,e,n)}var r,c,s;n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o})),r=n(616),c=n(624),s=n(752);const o={kernelName:r.mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(c.a)(r,"neg");const s=n.data.get(r.dataId).values,[o,i]=a(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,o)}}},1006:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e!==t?1:0)),o=Object(c.a)(a.qc,s,null,"bool"),i={kernelName:a.qc,backendName:"cpu",kernelFunc:o}},1028:function(e,t,n){"use strict";function a(e){const{backend:t,attrs:n}=e,{shape:a,value:c,dtype:s}=n,o=s||r.Si.inferDtype(c),i=r.Si.getArrayFromDType(o,r.Si.sizeFromShape(a));return function(e,t,n){e.fill(t)}(i,c),t.makeTensorInfo(a,o,i)}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return c}));var r=n(616);const c={kernelName:r.pb,backendName:"cpu",kernelFunc:a}},1217:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:o}=a;Object(c.a)([s],"leakyRelu");const i=r.Si.sizeFromShape(s.shape),u=n.data.get(s.dataId).values,d=r.Si.getTypedArrayFromDType("float32",i);for(let r=0;r<u.length;r++)d[r]=u[r]<0?o*u[r]:u[r];return n.makeTensorInfo(s.shape,"float32",d)}var r,c;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),r=n(616),c=n(624);const s={kernelName:r.Kb,backendName:"cpu",kernelFunc:a}},1221:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{reductionIndices:u,keepDims:d}=a,p=n;let l=i.shape;const f=l.length,b=r.Si.parseAxisParam(u,l);let m=b;const h=r.ie.getAxesPermutation(m,f);let k=p.data.get(i.dataId).values;if(null!=h){const e=Array(f);for(let t=0;t<e.length;t++)e[t]=l[h[t]];k=Object(o.a)(k,l,i.dtype,h,e),m=r.ie.getInnerMostAxes(m.length,f),l=e}Object(c.a)(i,"max"),r.ie.assertAxesAreInnerMostDims("max",m,f);const[I,S]=r.ie.computeOutAndReduceShapes(l,m),N=r.Si.sizeFromShape(S),g=Object(s.a)(k,N,I,i.dtype),O=p.write(g,I,i.dtype);let v=I;return d&&(v=r.ie.expandShapeToKeepDim(I,b)),{dataId:O,shape:v,dtype:i.dtype}}var r,c,s,o;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i})),r=n(616),c=n(624),s=n(1002),o=n(892);const i={kernelName:r.Xb,backendName:"cpu",kernelFunc:a}},1224:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a;if(1===t.length)return Object(s.a)({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const i=t[0].shape,u=t[0].dtype;t.forEach((e=>{r.Si.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.Si.assert(u===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const d=[],p=t.map((e=>{const t=Object(s.a)({inputs:{input:e},backend:n,attrs:{dim:o}});return d.push(t),t})),l=Object(c.a)({inputs:p,backend:n,attrs:{axis:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var r,c,s;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return o})),r=n(616),c=n(1026),s=n(1027);const o={kernelName:r.wc,backendName:"cpu",kernelFunc:a}},1225:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(624);const c={kernelName:a.xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:c}=e,{x:s}=t,{paddings:o,constantValue:i}=c;Object(r.a)(s,"pad");const u=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),d=o.map((e=>e[0])),p=n.data.get(s.dataId).values,l=a.Si.sizeFromShape(s.shape),f=s.shape.length,b=a.Si.computeStrides(s.shape),m=a.Si.sizeFromShape(u),h=u.length,k=a.Si.computeStrides(u),I=a.Si.getTypedArrayFromDType(s.dtype,m);0!==i&&I.fill(i);for(let r=0;r<l;r++){const e=a.Si.indexToLoc(r,f,b).map(((e,t)=>e+d[t]));I[a.Si.locToIndex(e,h,k)]=p[r]}return{dataId:n.write(I,u,s.dtype),shape:u,dtype:s.dtype}}}},1859:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return s})),a=n(616),r=n(1220),c=n(666);const s={kernelName:a.ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,o=a.Si.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],u=o/i,d=Object(c.a)({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=Object(r.a)(d,!1,n),l=Object(c.a)({inputs:{x:p},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),l}}},1860:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(616);const r={kernelName:a.qb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,c=n,s=a.Si.getTypedArrayFromDType(r.dtype,a.Si.sizeFromShape(r.shape)),[o,i,u,d]=r.shape,p=c.data.get(r.dataId).values;for(let a=0;a<o;a++){const e=a*u*i*d;for(let t=0;t<i;t++){const n=t*(u*d);for(let t=0;t<u;t++){const a=t*d;for(let r=0;r<d;r++){const c=Math.round(u-t-1),o=e+n+a+r;let i=p[o];c>=0&&c<u&&(i=p[e+n+c*d+r]),s[o]=i}}}}return{dataId:c.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}}},1861:function(e,t,n){"use strict";var a,r,c,s,o;n.d(t,"a",(function(){return i})),a=n(616),r=n(1025),c=n(750),s=n(1218),o=n(666);const i={kernelName:a.vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:u,bias:d,preluActivationWeights:p}=t,{strides:l,pad:f,dataFormat:b,dilations:m,dimRoundingMode:h,activation:k,leakyreluAlpha:I}=a;let S=Object(s.a)({inputs:{x:i,filter:u},backend:n,attrs:{strides:l,pad:f,dataFormat:b,dilations:m,dimRoundingMode:h}});if(d){const e=S;if("NCHW"===b&&1===d.shape.length&&1!==d.shape[0]){const e=Object(o.a)({inputs:{x:d},backend:n,attrs:{shape:[d.shape[0],1,1]}});S=Object(c.a)({inputs:{a:S,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else S=Object(c.a)({inputs:{a:S,b:d},backend:n});n.disposeIntermediateTensorInfo(e)}if(k){const e=S;if("NCHW"===b&&"prelu"===k&&1===p.shape.length&&1!==p.shape[0]){const e=Object(o.a)({inputs:{x:p},backend:n,attrs:{shape:[p.shape[0],1,1]}});S=Object(r.a)(n,S,k,e,I),n.disposeIntermediateTensorInfo(e)}else S=Object(r.a)(n,S,k,p,I);n.disposeIntermediateTensorInfo(e)}return S}}},1862:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(1025),c=n(750),s=n(1219);const o={kernelName:a.wb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:i,bias:u,preluActivationWeights:d}=t,{strides:p,pad:l,dataFormat:f,dilations:b,dimRoundingMode:m,activation:h,leakyreluAlpha:k}=a;let I=Object(s.a)({inputs:{x:o,filter:i},backend:n,attrs:{strides:p,pad:l,dataFormat:f,dilations:b,dimRoundingMode:m}});if(u){const e=I;I=Object(c.a)({inputs:{a:I,b:u},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=I;I=Object(r.a)(n,I,h,d,k),n.disposeIntermediateTensorInfo(e)}return I}}},1863:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(994);const c={kernelName:a.xb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:c,indices:s}=t,o=a.Si.sizeFromShape(c.shape),i=s.shape,u=i[i.length-1],[d,p,l,f]=a.ie.prepareAndValidate(c,s);if(0===p)return n.makeTensorInfo(d,c.dtype,[]);const b=n.data.get(s.dataId).values,m=n.bufferSync(c),h=Object(r.a)(b,m,c.dtype,p,u,l,f,c.shape,o);return n.makeTensorInfo(d,c.dtype,h.values)}}},1864:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(624),c=n(995),s=n(666);const o={kernelName:a.yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:i,indices:u}=t,{axis:d,batchDims:p}=o;Object(r.a)([i,u],"gatherV2");const l=a.Si.parseAxisParam(d,i.shape)[0],f=n.data.get(u.dataId).values,b=i.shape[l];for(let r=0;r<f.length;++r){const e=f[r];a.Si.assert(e<=b-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${b-1}]`))}let m=p;null==p&&(m=0);const h=a.Si.sizeFromShape(u.shape),k=a.ie.segment_util.collectGatherOpShapeInfo(i,u,l,m),I=Object(s.a)({inputs:{x:i},backend:n,attrs:{shape:[k.batchSize,k.outerSize,k.dimSize,k.sliceSize]}}),S=Object(s.a)({inputs:{x:u},backend:n,attrs:{shape:[k.batchSize,h/k.batchSize]}}),N=[k.batchSize,k.outerSize,h/k.batchSize,k.sliceSize],g=n.bufferSync(S),O=n.bufferSync(I),v=Object(c.a)(O,g,N);return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(k.outputShape,v.dtype,v.values)}}},1865:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return s})),a=n(616),r=n(1220),c=n(666);const s={kernelName:a.Bb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,o=a.Si.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],u=o/i,d=Object(c.a)({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=Object(r.a)(d,!0,n),l=Object(c.a)({inputs:{x:p},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),l}}},1866:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(631);const c=Object(r.a)(a.Eb,(e=>Number.isFinite(e)?1:0),"bool"),s={kernelName:a.Eb,backendName:"cpu",kernelFunc:c}},1867:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(631);const c=Object(r.a)(a.Fb,(e=>Math.abs(e)===1/0?1:0),"bool"),s={kernelName:a.Fb,backendName:"cpu",kernelFunc:c}},1868:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(631);const c=Object(r.a)(a.Gb,(e=>Number.isNaN(e)?1:0),"bool"),s={kernelName:a.Gb,backendName:"cpu",kernelFunc:c}},1869:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(1e3);const c={kernelName:a.Nb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:c,num:s}=n,o=Object(r.a)(a,c,s);return t.makeTensorInfo([o.length],"float32",o)}}},1870:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(631);const c=Object(r.a)(a.Pb,(e=>Math.log1p(e))),s={kernelName:a.Pb,backendName:"cpu",kernelFunc:c}},1871:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e&&t)),o=Object(c.a)(a.Rb,s,null,"bool"),i={kernelName:a.Rb,backendName:"cpu",kernelFunc:o}},1872:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(631);const c=Object(r.a)(a.Sb,(e=>e?0:1),"bool"),s={kernelName:a.Sb,backendName:"cpu",kernelFunc:c}},1873:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e||t)),o=Object(c.a)(a.Tb,s,null,"bool"),i={kernelName:a.Tb,backendName:"cpu",kernelFunc:o}},1874:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(624);const c={kernelName:a.Ib,backendName:"cpu",kernelFunc:function(e){function t(e){const t=e%l;let n=e-t+Math.max(0,t-i);const a=e-t+Math.min(t+i,f);let r=0;for(;n<=a;n++){const e=b[n];r+=e*e}return r}const{inputs:n,backend:c,attrs:s}=e,{x:o}=n,{depthRadius:i,bias:u,alpha:d,beta:p}=s;Object(r.a)(o,"LRN");const l=o.shape[3],f=l-1,b=c.data.get(o.dataId).values,m=a.Si.sizeFromShape(o.shape),h=new Float32Array(m);for(let a=0;a<m;a++){const e=t(a),n=b[a]*Math.pow(u+d*e,-p);h[a]=n}return c.makeTensorInfo(o.shape,o.dtype,h)}}},1875:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(624);const c={kernelName:a.Jb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:c}=e,{x:s,y:o,dy:i}=t,{depthRadius:u,bias:d,alpha:p,beta:l}=c;Object(r.a)(i,"LRNGrad");const f=a.Si.sizeFromShape(i.shape),b=i.shape[3],m=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,I=new Float32Array(f),S=f;for(let a=0;a<S;a++){const e=a%b,t=a-e+Math.max(0,e-u),n=a-e+Math.min(b,e+u+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(h[a],2);r=p*r+d;for(let c=t;c<n;c++){let e=-2*p*l*h[c]*k[a]/r;a===c&&(e+=Math.pow(r,-l)),e*=m[a],I[c]+=e}}return n.makeTensorInfo(i.shape,s.dtype,I)}}},1876:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(624),c=n(753),s=n(709);const o={kernelName:a.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t;Object(r.a)(i,"maxPool");const{filterSize:u,strides:d,pad:p,dimRoundingMode:l}=o;a.Si.assert(a.ie.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const f=a.ie.computePool2DInfo(i.shape,u,d,1,p,l);let b;if(1===f.filterWidth&&1===f.filterHeight&&a.Si.arraysEqual(f.inShape,f.outShape))b=Object(s.a)({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=a.Si.computeStrides(i.shape),r=Object(c.c)(e,i.shape,i.dtype,t,f,"max");b=n.makeTensorInfo(f.outShape,i.dtype,r.values)}return b}}},1877:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return s})),a=n(616),r=n(624),c=n(753);const s={kernelName:a.Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:u,pad:d,dimRoundingMode:p,dataFormat:l}=s;Object(r.a)(o,"maxPool3d");const f=a.ie.computePool3DInfo(o.shape,i,u,1,d,p,l),b=n.data.get(o.dataId).values,m=Object(c.d)(b,o.shape,o.dtype,a.Si.computeStrides(o.shape),f,"max");return n.makeTensorInfo(m.shape,"float32",m.values)}}},1878:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return s})),a=n(616),r=n(624),c=n(753);const s={kernelName:a.ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:u,strides:d,pad:p,dimRoundingMode:l}=s;Object(r.a)([o,i],"maxPool3DGrad");const f=a.ie.computePool3DInfo(i.shape,u,d,1,p,l),b=n.bufferSync(i),m=Object(c.a)(b,f),h=f.strideDepth,k=f.strideHeight,I=f.strideWidth,S=f.dilationDepth,N=f.dilationHeight,g=f.dilationWidth,O=f.effectiveFilterDepth,v=f.effectiveFilterHeight,j=f.effectiveFilterWidth,y=O-1-f.padInfo.front,x=j-1-f.padInfo.left,F=v-1-f.padInfo.top,T=Object(a.we)(i.shape,"float32"),A=n.bufferSync(o);for(let a=0;a<f.batchSize;++a)for(let e=0;e<f.inChannels;++e)for(let t=0;t<f.inDepth;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const c=t-y,s=n-F,o=r-x;let i=0;for(let t=0;t<O;t+=S){const n=(c+t)/h;if(!(n<0||n>=f.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=N){const c=(s+r)/k;if(!(c<0||c>=f.outHeight||Math.floor(c)!==c))for(let s=0;s<j;s+=g){const u=(o+s)/I;if(u<0||u>=f.outWidth||Math.floor(u)!==u)continue;const d=O*v*j-1-m.get(a,n,c,u,e)===t*v*j+r*j+s?1:0;0!==d&&(i+=A.get(a,n,c,u,e)*d)}}}T.set(i,a,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}}},1879:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return s})),a=n(616),r=n(624),c=n(753);const s={kernelName:a.bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i,output:u}=t,d=i;Object(r.a)([i,u],"maxPoolGrad");const{filterSize:p,strides:l,pad:f,dimRoundingMode:b}=s,m=a.ie.computePool2DInfo(d.shape,p,l,1,f,b),h=n.data.get(d.dataId).values,k=Object(a.we)(m.outShape,d.dtype,Object(c.b)(h,d.shape,d.dtype,m).values),I=m.strideHeight,S=m.strideWidth,N=m.dilationHeight,g=m.dilationWidth,O=m.effectiveFilterHeight,v=m.effectiveFilterWidth,j=v-1-m.padInfo.left,y=O-1-m.padInfo.top,x=Object(a.we)(d.shape,"float32"),F=n.data.get(o.dataId).values,T=Object(a.we)(o.shape,"float32",F);for(let a=0;a<m.batchSize;++a)for(let e=0;e<m.inChannels;++e)for(let t=0;t<m.inHeight;++t)for(let n=0;n<m.inWidth;++n){const r=t-y,c=n-j;let s=0;for(let t=0;t<O;t+=N){const n=(r+t)/I;if(!(n<0||n>=m.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=g){const o=(c+r)/S;if(o<0||o>=m.outWidth||Math.floor(o)!==o)continue;const i=O*v-1-k.get(a,n,o,e)===t*v+r?1:0;0!==i&&(s+=T.get(a,n,o,e)*i)}}x.set(s,a,t,n,e)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}}},1880:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(751),c=n(895),s=n(824);const o={kernelName:a.ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{axis:u,keepDims:d}=o,p=a.Si.parseAxisParam(u,i.shape),l=a.ie.computeOutAndReduceShapes(i.shape,p)[1],f=a.Si.sizeFromShape(l),b=[],m=n.makeTensorInfo([],"float32",new Float32Array([f]));b.push(m);const h=Object(r.a)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});b.push(h);const k=Object(c.a)({inputs:{a:h,b:m},backend:n});b.push(k);const I=Object(s.a)({inputs:{x:k},backend:n,attrs:{axis:u,keepDims:d}});return b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}}},1881:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(624),c=n(666),s=n(682);const o={kernelName:a.fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{axis:u,keepDims:d}=o;Object(r.a)(i,"min");const p=a.Si.parseAxisParam(u,i.shape);let l=p;const f=a.ie.getAxesPermutation(l,i.shape.length);let b=i;null!=f&&(b=Object(s.a)({inputs:{x:i},backend:n,attrs:{perm:f}}),l=a.ie.getInnerMostAxes(l.length,i.shape.length)),a.ie.assertAxesAreInnerMostDims("min",l,b.shape.length);const[m,h]=a.ie.computeOutAndReduceShapes(b.shape,l),k=a.Si.sizeFromShape(h),I=a.Si.makeZerosTypedArray(a.Si.sizeFromShape(m),b.dtype),S=n.data.get(b.dataId).values;for(let a=0;a<I.length;++a){const e=a*k;let t=S[e];for(let n=0;n<k;++n){const a=S[e+n];(Number.isNaN(a)||a<t)&&(t=a)}I[a]=t}null!=f&&n.disposeIntermediateTensorInfo(b);const N=n.makeTensorInfo(m,b.dtype,I);if(d){const e=a.ie.expandShapeToKeepDim(m,p),t=Object(c.a)({inputs:{x:N},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(N),t}return N}}},1882:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(624);const c={kernelName:a.hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:c}=e,{x:s}=t,{paddings:o,mode:i}=c;Object(r.a)(s,"mirrorPad");const u=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),d=o.map((e=>e[0])),p=o.map(((e,t)=>e[0]+s.shape[t])),l="reflect"===i?0:1,f=n.data.get(s.dataId).values,b=s.shape.length,m=a.Si.computeStrides(s.shape),h=a.Si.sizeFromShape(u),k=u.length,I=a.Si.computeStrides(u),S=a.Si.getTypedArrayFromDType(s.dtype,h);for(let r=0;r<h;r++){let e=a.Si.indexToLoc(r,k,I);for(let n=0;n<k;n++)e[n]<d[n]?e[n]=2*d[n]-e[n]-l:e[n]>=p[n]&&(e[n]=2*(p[n]-1)-e[n]+l);e=e.map(((e,t)=>e-d[t]));const t=a.Si.locToIndex(e,b,m);S[r]=f[t]}return{dataId:n.write(S,u,s.dtype),shape:u,dtype:s.dtype}}}},1883:function(e,t,n){"use strict";var a,r,c;n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),o=Object(c.a)(a.ic,s),i={kernelName:a.ic,backendName:"cpu",kernelFunc:o}},1884:function(e,t,n){"use strict";var a,r,c,s;n.d(t,"a",(function(){return o})),a=n(616),r=n(874),c=n(624),s=n(1222);const o={kernelName:a.kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{logits:i}=t,{numSamples:u,seed:d,normalized:p}=o;Object(c.a)(i,"multinomial");const l=p?i:Object(s.a)({inputs:{logits:i},backend:n,attrs:{dim:-1}}),f=l.shape[0],b=l.shape[1],m=n.data.get(l.dataId).values,h=[f,u],k=a.Si.makeZerosTypedArray(a.Si.sizeFromShape(h),"int32");for(let a=0;a<f;++a){const e=a*b,t=new Float32Array(b-1);t[0]=m[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+m[e+a];const n=r.alea(d.toString()),c=a*u;for(let a=0;a<u;++a){const e=n();k[c+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){k[c+a]=n;break}}}return p||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",k)}}},1885:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(624);const c=a.Yf.nonMaxSuppressionV3Impl,s={kernelName:a.nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:d}=a;Object(r.a)(s,"NonMaxSuppression");const p=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,{selectedIndices:f}=c(p,l,i,u,d);return n.makeTensorInfo([f.length],"int32",new Int32Array(f))}}},1886:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(624);const c=a.Yf.nonMaxSuppressionV4Impl,s={kernelName:a.oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:p}=a;Object(r.a)(s,"NonMaxSuppressionPadded");const l=n.data.get(s.dataId).values,f=n.data.get(o.dataId).values,{selectedIndices:b,validOutputs:m}=c(l,f,i,u,d,p);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([],"int32",new Int32Array([m]))]}}},1887:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return s})),a=n(616),r=n(624);const c=a.Yf.nonMaxSuppressionV5Impl,s={kernelName:a.pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:d,softNmsSigma:p}=a;Object(r.a)(s,"NonMaxSuppressionWithScore");const l=n.data.get(s.dataId).values,f=n.data.get(o.dataId).values,b=i,m=u,h=d,k=p,{selectedIndices:I,selectedScores:S}=c(l,f,b,m,h,k);return[n.makeTensorInfo([I.length],"int32",new Int32Array(I)),n.makeTensorInfo([S.length],"float32",new Float32Array(S))]}}},1888:function(e,t,n){"use strict";var a,r;n.d(t,"a",(function(){return c})),a=n(616),r=n(624);const c={kernelName:a.sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:c}=e,{indices:s}=t,{dtype:o,depth:i,onValue:u,offValue:d}=c;Object(r.a)(s,"oneHot");const p=a.Si.sizeFromShape(s.shape),l=new Float32Array(p*i);l.fill(d);const f=n.data.get(s.dataId).values;for(let a=0;a<p;++a)f[a]>=0&&f[a]<i&&(l[a*i+f[a]]=u);return n.makeTensorInfo([...s.shape,i],o,l)}}},1889:function(e,t,n){"use strict";var a,r,c,s,o,i;n.d(t,"a",(function(){return u})),a=n(616),r=n(727),c=n(1028),s=n(823),o=n(780),i=n(1223);const u={kernelName:a.tc,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:u}=n;if("string"===u.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"===u.dtype){const t=Object(o.a)({inputs:{input:u},backend:a}),n=e({inputs:{x:t},backend:a}),c=Object(s.a)({inputs:{input:u},backend:a}),d=Object(i.a)({inputs:{x:c},backend:a}),p=Object(r.a)({inputs:{real:n,imag:d},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(d),p}return Object(c.a)({backend:a,attrs:{shape:u.shape,value:1,dtype:u.dtype}})}}},2266:function(e,t,n){"use strict";var a=n(616),r=n(624),c=n(753);n.d(t,"a",(function(){return s}));const s={kernelName:a.cc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:o,strides:i,pad:u,includeBatchInIndex:d}=t,p=n;Object(r.a)(s,"MaxPoolWithArgmax");const l=p.data.get(s.dataId).values,f=a.ie.computePool2DInfo(s.shape,o,i,[1,1],u),[b,m]=function(e,t,n,r,s){const o=a.Si.computeStrides(t),i=Object(c.c)(e,t,n,o,s,"max"),u=Object(c.b)(e,t,n,s,!0,r);return[i.values,u.values]}(l,s.shape,s.dtype,d,f),h=p.write(b,f.outShape,s.dtype),k=p.write(m,f.outShape,s.dtype);return[{dataId:h,shape:f.outShape,dtype:s.dtype},{dataId:k,shape:f.outShape,dtype:"int32"}]}}},709:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));const r={kernelName:n(616).Cb,backendName:"cpu",kernelFunc:a}},752:function(e,t,n){"use strict";var a,r,c;n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e*t)),o=Object(c.b)(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),i=Object(c.a)(a.lc,s,o),u={kernelName:a.lc,backendName:"cpu",kernelFunc:i}},823:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,c=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,c)}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));const r={kernelName:n(616).Db,backendName:"cpu",kernelFunc:a}},992:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(697),c=n(631);const s=Object(r.a)((e=>Math.floor(e))),o=Object(c.b)(a.rb,s),i={kernelName:a.rb,backendName:"cpu",kernelFunc:o}},993:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>Math.floor(e/t))),o=Object(c.a)(a.sb,s,null,"int32"),i={kernelName:a.sb,backendName:"cpu",kernelFunc:o}},994:function(e,t,n){"use strict";function a(e,t,n,a,c,s,o,i,u){const d=Object(r.we)([a,s],n);for(let r=0;r<a;r++){const n=[];let a=0;for(let t=0;t<c;t++){const s=e[r*c+t];a+=s*o[t],n.push(s)}if(a<0||a>=u/s)throw Error(`Invalid indices: ${n} does not index into ${i}`);for(let e=0;e<s;e++)d.values[r*s+e]=t.get(...t.indexToLoc(a*s+e))}return d}n.d(t,"a",(function(){return a}));var r=n(616)},995:function(e,t,n){"use strict";function a(e,t,n){const a=Object(r.we)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),c=n[0],s=n[2],o=t.locToIndex([c,s]);n[2]=t.values[o];const i=e.locToIndex(n);0<=i&&i<e.values.length&&(a.values[r]=e.values[i])}return a}n.d(t,"a",(function(){return a}));var r=n(616)},996:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e>t?1:0)),o=Object(c.a)(a.zb,s,null,"bool"),i={kernelName:a.zb,backendName:"cpu",kernelFunc:o}},997:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e>=t?1:0)),o=Object(c.a)(a.Ab,s,null,"bool"),i={kernelName:a.Ab,backendName:"cpu",kernelFunc:o}},998:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e<t?1:0)),o=Object(c.a)(a.Lb,s,null,"bool"),i={kernelName:a.Lb,backendName:"cpu",kernelFunc:o}},999:function(e,t,n){"use strict";var a,r,c;n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),a=n(616),r=n(655),c=n(663);const s=Object(r.a)(((e,t)=>e<=t?1:0)),o=Object(c.a)(a.Mb,s,null,"bool"),i={kernelName:a.Mb,backendName:"cpu",kernelFunc:o}}}]);