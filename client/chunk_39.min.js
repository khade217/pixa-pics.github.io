/*! For license information please see chunk_39.min.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1022:function(e,t,n){"use strict";function a(e,t){const n=Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.we)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const o=e.locToIndex(n);a.values[r]=e.values[o]}return a}n.d(t,"a",(function(){return a}));var r=n(616)},1023:function(e,t,n){"use strict";function a(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const o=r-n+1,s=t-n+1,i=Math.log(o),c=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*c*(o-c)/o)*Math.sign(s-o/2);a(e,t,Math.max(n,Math.floor(t-s*c/o+u)),Math.min(r,Math.floor(t+(o-s)*c/o+u)))}const i=e[t];let c=n,u=r;for(o.Si.swap(e,n,t),s(e[r],i)>0&&o.Si.swap(e,n,r);c<u;){for(o.Si.swap(e,c,u),c++,u--;s(e[c],i)<0;)c+=1;for(;s(e[u],i)>0;)u-=1}0===s(e[n],i)?o.Si.swap(e,n,u):(u+=1,o.Si.swap(e,u,r)),u<=t&&(n=u+1),t<=u&&(r=u-1)}}function r(e,t,n,r,i){const c=t[t.length-1],[u,d]=[e.length/c,c],l=o.Si.getTypedArrayFromDType(n,u*r),p=o.Si.getTypedArrayFromDType("int32",u*r);for(let o=0;o<u;o++){const t=o*d,n=e.subarray(t,t+d);let c=Array(n.length);n.forEach(((e,t)=>c[t]={value:e,index:t})),r<c.length&&(a(c,r),c=c.slice(0,r)),i&&c.sort(s);const u=o*r,f=l.subarray(u,u+r),m=p.subarray(u,u+r);for(let e=0;e<r;e++)f[e]=c[e].value,m[e]=c[e].index}const f=t.slice();return f[f.length-1]=r,[Object(o.we)(f,n,l),Object(o.we)(f,"int32",p)]}n.d(t,"a",(function(){return r}));var o=n(616);const s=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n}},1024:function(e,t,n){"use strict";function a(e,t,n,a){const o=r.Si.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let r=0;r<o;r++)s[0]*=n[r];s[1]=n[o];for(let r=o+1;r<n.length;r++)s[2]*=n[r];const i=new Map,c=new Int32Array(n[o]),u=new r.Ed(s,a,e),d=[],l=1===s[0]&&1===s[2];for(let r=0;r<n[o];r++){let t;if(l)t=e[r].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(u.get(t,r,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[r]=n;else{const e=i.size;i.set(t,e),c[r]=e,d.push(r)}}const p=s.slice();p[1]=i.size;const f=new r.Ed(p,a);d.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)f.set(u.get(n,e,a),n,t,a)}));const m=n.slice();return m[o]=p[1],{outputValues:f.values,outputShape:m,indices:c}}n.d(t,"a",(function(){return a}));var r=n(616)},1025:function(e,t,n){"use strict";function a(e,t,n,a,l){if("linear"===n)return Object(o.a)({inputs:{x:t},backend:e});if("relu"===n)return Object(c.a)({inputs:{x:t},backend:e});if("elu"===n)return Object(r.a)({inputs:{x:t},backend:e});if("relu6"===n)return Object(u.a)({inputs:{x:t},backend:e});if("prelu"===n)return Object(i.a)({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Object(s.a)({inputs:{x:t},backend:e,attrs:{alpha:l}});if("sigmoid"===n)return Object(d.a)({inputs:{x:t},backend:e});throw Error(`Activation ${n} has not been implemented for the CPU backend.`)}var r,o,s,i,c,u,d;n.d(t,"a",(function(){return a})),r=n(1214),o=n(709),s=n(1217),i=n(1216),c=n(1213),u=n(1215),d=n(893)},1210:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));const a="4.17.0"},1211:function(e,t,n){"use strict";function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),r=a(e,t,"float32");return Object(o.a)({inputs:{real:n,imag:r},backend:e})}const s=r.Si.makeZerosTypedArray(r.Si.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}var r,o;n.d(t,"a",(function(){return a})),r=n(616),o=n(727)},1220:function(e,t,n){"use strict";function a(e,t,n){const a=e.shape,o=a[0],i=a[1],u=n.data.get(e.dataId),d=u.complexTensorInfos.real,l=u.complexTensorInfos.imag,p=[o,i],f=s.Si.sizeFromShape(p),m=s.Si.getTypedArrayFromDType("float32",f),b=s.Si.getTypedArrayFromDType("float32",f);for(let T=0;T<o;T++){const e=Object(h.a)({inputs:{x:d},backend:n,attrs:{begin:[T,0],size:[1,i]}}),a=Object(h.a)({inputs:{x:l},backend:n,attrs:{begin:[T,0],size:[1,i]}}),o=Object(c.a)({inputs:{real:e,imag:a},backend:n}),{real:u,imag:p}=r(o,t,n),f=s.ie.mergeRealAndImagArrays(u,p);for(let t=0;t<i;t++){const e=s.ie.getComplexWithIndex(f,t);m[T*i+t]=e.real,b[T*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o)}const I=n.makeTensorInfo(p,"float32",m),g=n.makeTensorInfo(p,"float32",b),k=Object(c.a)({inputs:{real:I,imag:g},backend:n});return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(g),k}function r(e,t,n){const a=s.Si.sizeFromShape(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,c=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const r=o(i,c,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",r.real),t=n.makeTensorInfo(u,"float32",r.imag),o=n.makeTensorInfo([],"float32",s.Si.createScalarValue(a,"float32")),i=Object(d.a)({inputs:{x:o},backend:n}),c=m.b.kernelFunc({inputs:{a:e,b:o},backend:n}),l=m.b.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:p,imag:f}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,i=0;for(let a=0;a<t;a++){const c=s.ie.exponent(r*a,t,n),u=s.ie.getComplexWithIndex(e,a);o+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(o/=t,i/=t),s.ie.assignToTypedArray(a,o,i,r)}return a}(s.ie.mergeRealAndImagArrays(i,c),a,t);return s.ie.splitRealAndImagArrays(e)}var u}function o(e,t,n,a,r){if(1===n)return{real:e,imag:t};const d=s.ie.mergeRealAndImagArrays(e,t),m=n/2,h=s.ie.complexWithEvenIndex(d),I=h.real,g=h.imag,k=[I.length],T=r.makeTensorInfo(k,"float32",I),S=r.makeTensorInfo(k,"float32",g),y=Object(c.a)({inputs:{real:T,imag:S},backend:r}),x=s.ie.complexWithOddIndex(d),O=x.real,j=x.imag,v=[O.length],A=r.makeTensorInfo(v,"float32",O),F=r.makeTensorInfo(v,"float32",j),N=Object(c.a)({inputs:{real:A,imag:F},backend:r}),w=o(I,g,m,a,r),M=w.real,D=w.imag,W=[M.length],z=r.makeTensorInfo(W,"float32",M),H=r.makeTensorInfo(W,"float32",D),E=Object(c.a)({inputs:{real:z,imag:H},backend:r}),R=o(O,j,m,a,r),B=R.real,C=R.imag,q=[B.length],L=r.makeTensorInfo(q,"float32",B),V=r.makeTensorInfo(q,"float32",C),G=Object(c.a)({inputs:{real:L,imag:V},backend:r}),P=s.ie.exponents(n,a),U=[P.real.length],J=r.makeTensorInfo(U,"float32",P.real),K=r.makeTensorInfo(U,"float32",P.imag),Q=Object(c.a)({inputs:{real:J,imag:K},backend:r}),Z=Object(p.a)({inputs:{a:Q,b:G},backend:r}),$=Object(i.a)({inputs:{a:E,b:Z},backend:r}),X=Object(b.a)({inputs:{a:E,b:Z},backend:r}),Y=Object(f.a)({inputs:{input:$},backend:r}),_=Object(f.a)({inputs:{input:X},backend:r}),ee=Object(l.a)({inputs:{input:$},backend:r}),te=Object(l.a)({inputs:{input:X},backend:r}),ne=Object(u.a)({inputs:[Y,_],backend:r,attrs:{axis:0}}),ae=Object(u.a)({inputs:[ee,te],backend:r,attrs:{axis:0}}),re=r.data.get(ne.dataId).values,oe=r.data.get(ae.dataId).values;return r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ae),{real:re,imag:oe}}var s,i,c,u,d,l,p,f,m,h,b;n.d(t,"a",(function(){return a})),s=n(616),i=n(750),c=n(727),u=n(1026),d=n(709),l=n(823),p=n(752),f=n(780),m=n(895),h=n(728),b=n(822)},1223:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(c.a)({inputs:{input:r},backend:n}),t=a({inputs:{x:e},backend:n}),s=Object(i.a)({inputs:{input:r},backend:n}),u=a({inputs:{x:s},backend:n}),d=Object(o.a)({inputs:{real:t,imag:u},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),d}return Object(s.a)({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var r,o,s,i,c;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return u})),r=n(616),o=n(727),s=n(1028),i=n(823),c=n(780);const u={kernelName:r.Pd,backendName:"cpu",kernelFunc:a}},2259:function(e,t,n){"use strict";function a(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return pn.Si.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),pn.Si.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return pn.Si.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function r(e,t,n,a,r,o,s,i,c,u,d){return 0<=i&&i<t&&0<=c&&c<n?e[s*a+i*r+c*o+u]:d}function o(e,t,n,a,o,s,i,c,u,d,l){return r(e,t,n,a,o,s,i,Math.round(c),Math.round(u),d,l)}function s(e,t,n,a,o,s,i,c,u,d,l){const p=Math.floor(c),f=Math.floor(u),m=p+1,h=f+1;return(m-c)*((h-u)*r(e,t,n,a,o,s,i,p,f,d,l)+(u-f)*r(e,t,n,a,o,s,i,p,h,d,l))+(c-p)*((h-u)*r(e,t,n,a,o,s,i,m,f,d,l)+(u-f)*r(e,t,n,a,o,s,i,m,h,d,l))}var i,c,u,d,l,p,f,m,h,b,I,g,k,T,S,y,x,O,j,v,A,F,N,w,M,D,W,z,H,E,R,B,C,q,L,V,G,P,U,J,K,Q,Z,$,X,Y,_,ee,te,ne,ae,re,oe,se,ie,ce,ue,de,le,pe,fe,me,he,be,Ie,ge,ke,Te,Se,ye,xe,Oe,je,ve,Ae,Fe,Ne,we,Me,De,We,ze,He,Ee,Re,Be,Ce,qe,Le,Ve,Ge,Pe,Ue,Je,Ke,Qe,Ze,$e,Xe,Ye,_e,et,tt,nt,at,rt,ot,st,it,ct,ut,dt,lt,pt,ft,mt,ht,bt,It,gt,kt,Tt,St,yt,xt,Ot,jt,vt,At,Ft,Nt,wt,Mt,Dt,Wt,zt,Ht,Et,Rt,Bt,Ct,qt,Lt,Vt,Gt,Pt,Ut,Jt,Kt,Qt,Zt,$t,Xt,Yt,_t,en,tn,nn,an,rn,on,sn,cn,un,dn,ln,pn=n(616),fn=n(1025),mn=n(750),hn=n(1212);const bn={kernelName:pn.Qd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:d,leakyreluAlpha:l}=a;let p,f,m;const h=[];p=Object(hn.a)({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:u},backend:n}),s&&(f=Object(mn.a)({inputs:{a:p,b:s},backend:n}),h.push(p),p=f),d&&(m=Object(fn.a)(n,p,d,i,l),h.push(p),p=m);for(const b of h)n.disposeIntermediateTensorInfo(b);return p}};i=n(987),c=n(1815),u=n(1816),d=n(1817),l=n(1818),p=n(1819),f=n(1820),m=n(1821),h=n(1822),b=n(1823),I=n(1824),g=n(1825),k=n(1826),T=n(1827),S=n(1828),y=n(1829),x=n(1830),O=n(1831),j=n(1832),v=n(1833),A=n(988),F=n(1834),N=n(751),w=n(989),M=n(1835),D=n(727),W=n(1836),z=n(1026),H=n(1218),E=n(1837),R=n(1838),B=n(1839),C=n(1840),q=n(1841),L=n(1842),V=n(1843),G=n(1844),P=n(1845),U=n(1846),J=n(1847),K=n(1848),Q=n(1219),Z=n(1849),$=n(1850),X=n(1851),Y=n(1852),_=n(1853),ee=n(1854),te=n(1855),ne=n(1856),ae=n(1214),re=n(1857),oe=n(890),se=n(1858),ie=n(891),ce=n(1027),ue=n(991),de=n(1859),le=n(1028),pe=n(1860),fe=n(992),me=n(993),he=n(1861),be=n(1862),Ie=n(1863),ge=n(1864),ke=n(996),Te=n(997),Se=n(709),ye=n(1865),xe=n(823),Oe=n(1866),je=n(1867),ve=n(1868),Ae=n(1217),Fe=n(998),Ne=n(999),we=n(1869),Me=n(1001),De=n(1870),We=n(1871),ze=n(1872),He=n(1873),Ee=n(1874),Re=n(1875),Be=n(1221),Ce=n(1003),qe=n(1876),Le=n(1877),Ve=n(1878),Ge=n(1879),Pe=n(2266),Ue=n(1880),Je=n(1881),Ke=n(1004),Qe=n(1882),Ze=n(1883),$e=n(1884),Xe=n(752),Ye=n(1005),_e=n(1885),et=n(1886),tt=n(1887),nt=n(1006),at=n(1888),rt=n(1889),ot=n(1224),st=n(1225),it=n(1890),ct=n(1216),ut=n(1007),dt=n(1891),lt=n(1892),pt=n(1893),ft=n(1894),mt=n(780),ht=n(895),bt=n(1895),It=n(1213),gt=n(1215),kt=n(666),Tt=n(1896),St=n(1897),yt=n(1898),xt=n(1899),Ot=n(1900),jt=n(1901),vt=n(1902),At=n(1012),Ft=n(1903),Nt=n(2267),wt=n(1904),Mt=n(1905),Dt=n(893),Wt=n(1906),zt=n(1907),Ht=n(1908),Et=n(728),Rt=n(1222),Bt=n(1909),Ct=n(1910),qt=n(1911),Lt=n(1912),Vt=n(1913),Gt=n(1914),Pt=n(1915),Ut=n(1916),Jt=n(1015),Kt=n(1917),Qt=n(1016),Zt=n(1017),$t=n(1918),Xt=n(1919),Yt=n(1920),_t=n(1921),en=n(1922),tn=n(822),nn=n(824),an=n(631);const In=Object(an.a)(pn.Bd,(e=>Math.tan(e))),gn={kernelName:pn.Bd,backendName:"cpu",kernelFunc:In},kn=Object(an.a)(pn.Cd,(e=>Math.tanh(e))),Tn={kernelName:pn.Cd,backendName:"cpu",kernelFunc:kn};rn=n(821);const Sn={kernelName:pn.Fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:o}=t,{sliceRank:s,numUpdates:i,sliceSize:c,strides:u,outputSize:d}=pn.ie.calculateShapes(o,r,a.shape),l=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(a),m=Object(rn.a)(l,p,a.shape,d,c,i,s,u,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};on=n(624),sn=n(1022);const yn={kernelName:pn.Gd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;Object(on.a)(r,"tile");const s=Object(sn.a)(n.bufferSync(r),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};cn=n(1023);const xn={kernelName:pn.Hd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a;Object(on.a)(r,"topk");const i=n.data.get(r.dataId).values,[c,u]=Object(cn.a)(i,r.shape,r.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},On={kernelName:pn.Id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:i,transforms:c}=t,{interpolation:u,fillMode:d,fillValue:l,outputShape:p}=n,[f,m,h,b]=i.shape,[I,g]=null!=p?p:[m,h],k=[f,I,g,b],T=pn.Si.computeStrides(i.shape),S=T[0],y=T[1],x=T[2],O=pn.Si.computeStrides(k),j=O[0],v=O[1],A=O[2],F=pn.Si.getTypedArrayFromDType(i.dtype,pn.Si.sizeFromShape(k));F.fill(l);const N=r.data.get(i.dataId).values,w=r.data.get(c.dataId).values;for(let M=0;M<f;++M){const e=1===c.shape[0]?w:w.subarray(8*M,8*M+8);for(let t=0;t<I;++t)for(let n=0;n<g;++n)for(let r=0;r<b;++r){let i;const c=e[6]*n+e[7]*t+1;if(0===c)continue;const p=(e[0]*n+e[1]*t+e[2])/c,f=(e[3]*n+e[4]*t+e[5])/c,b=a(p,h,d),I=a(f,m,d);switch(u){case"nearest":i=o(N,m,h,S,y,x,M,I,b,r,l);break;case"bilinear":i=s(N,m,h,S,y,x,M,I,b,r,l);break;default:throw Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+u)}F[M*j+t*v+n*A+r]=i}return r.makeTensorInfo(k,i.dtype,F)}return{dataId:r.write(F,k,i.dtype),shape:i.shape,dtype:i.dtype}}};un=n(682),dn=n(1024);const jn={kernelName:pn.Kd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;Object(on.a)(o,"unique");const s=a.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:u}=Object(dn.a)(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([u.length],"int32",u)]}},vn={kernelName:pn.Ld,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r.shape.length,i=r.shape[o],c=Array(s-1);let u=0;for(let f=0;f<s;f++)f!==o&&(c[u++]=r.shape[f]);const d=Array(s).fill(0),l=r.shape.slice();l[o]=1;const p=Array(i);for(let f=0;f<p.length;f++){d[o]=f;const e=Object(Et.a)({inputs:{x:r},backend:n,attrs:{begin:d,size:l}});p[f]=Object(kt.a)({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return p}},An={kernelName:pn.Md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a;Object(on.a)(r,"unsortedSegmentSum");const i=[],c=[],u=r.shape.length-o.shape.length;let d=o;for(let p=0;p<u;++p){const e=Object(ce.a)({inputs:{input:d},backend:n,attrs:{dim:p+1}});d=e,c.push(e)}for(let p=0;p<s;++p){const e=pn.Si.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=Object(oe.a)({inputs:{a:t,b:d},backend:n}),o=Object(N.a)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=Object(Xe.a)({inputs:{a:o,b:r},backend:n}),u=Object(nn.a)({inputs:{x:s},backend:n,attrs:{axis:0,keepDims:!1}});i.push(u),c.push(t),c.push(a),c.push(o),c.push(s),c.push(u)}const l=Object(ot.a)({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};ln=n(1223);const Fn=[bn,i.a,c.a,u.a,mn.b,d.a,l.a,p.a,f.a,m.a,h.a,b.a,I.a,g.a,k.a,T.a,S.a,y.a,x.a,hn.b,O.a,j.a,v.a,A.a,F.a,N.b,w.a,M.a,D.b,W.a,z.b,H.b,E.a,R.a,B.a,C.a,q.a,L.a,V.a,G.a,P.a,U.a,J.a,K.a,Q.b,Z.a,$.a,X.a,Y.a,_.a,ee.a,te.a,ne.a,ae.b,re.a,oe.b,se.a,ie.b,ce.b,ue.a,de.a,le.b,pe.a,fe.a,me.a,he.a,be.a,Ie.a,ge.a,ke.a,Te.a,Se.b,ye.a,xe.b,Oe.a,je.a,ve.a,Ae.b,Fe.a,Ne.a,we.a,Me.a,De.a,We.a,ze.a,He.a,Ee.a,Re.a,Be.b,Ce.a,qe.a,Le.a,Ve.a,Ge.a,Pe.a,Ue.a,Je.a,Ke.a,Qe.a,Ze.a,$e.a,Xe.b,Ye.a,_e.a,et.a,tt.a,nt.a,at.a,rt.a,ot.b,st.a,it.a,ct.b,ut.a,dt.a,lt.a,pt.a,ft.a,mt.b,ht.b,bt.a,It.b,gt.b,kt.b,Tt.a,St.a,yt.a,xt.a,Ot.a,jt.a,vt.a,At.a,Ft.a,Nt.a,wt.a,Mt.a,Dt.b,Wt.a,zt.a,Ht.a,Et.b,Rt.b,Bt.a,Ct.a,qt.a,Lt.a,Vt.a,Gt.a,Pt.a,Ut.a,Jt.a,Kt.a,Qt.a,Zt.a,$t.a,Xt.a,Yt.a,_t.a,en.a,tn.b,nn.b,gn,Tn,Sn,yn,xn,On,un.b,jn,vn,An,ln.b];for(const Nn of Fn)Object(pn.sh)(Nn)},631:function(e,t,n){"use strict";function a(e,t,n){return r(e,Object(i.a)(t),n)}function r(e,t,n){return({inputs:a,attrs:r,backend:i})=>{const{x:c}=a;Object(s.a)(c,e);const u=i,d=u.data.get(c.dataId).values;let l;if("string"===c.dtype){if(!Array.isArray(d))throw Error("String tensor's value was not an instance of Array");l=o.ie.fromUint8ToStringArray(d)}else l=d;const p=n||c.dtype,f=t(l,p,r);return u.makeTensorInfo(c.shape,p,f)}}var o,s,i;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r})),o=n(616),s=n(624),i=n(697)},655:function(e,t,n){"use strict";function a(e){return(t,n,a,o,s)=>{const i=r.ie.assertAndGetBroadcastShape(t,n),c=i.length,u=r.Si.computeStrides(i),d=r.Si.sizeFromShape(i),l=r.Si.getTypedArrayFromDType(s,d),p=t.length,f=n.length,m=r.Si.computeStrides(t),h=r.Si.computeStrides(n),b=r.ie.getBroadcastDims(t,i),I=r.ie.getBroadcastDims(n,i);if(b.length+I.length===0)for(let r=0;r<l.length;++r)l[r]=e(a[r%a.length],o[r%o.length]);else for(let g=0;g<l.length;++g){const t=r.Si.indexToLoc(g,c,u),n=t.slice(-p);b.forEach((e=>n[e]=0));const s=r.Si.locToIndex(n,p,m),i=t.slice(-f);I.forEach((e=>i[e]=0));const d=r.Si.locToIndex(i,f,h);l[g]=e(a[s],o[d])}return[l,i]}}n.d(t,"a",(function(){return a}));var r=n(616)},663:function(e,t,n){"use strict";function a(e,t,n,a){return null==n?({inputs:n,backend:r})=>{const{a:i,b:c}=n,u=r;Object(s.a)([i,c],e);const d=u.data.get(i.dataId).values,l=u.data.get(c.dataId).values,p="string"===i.dtype?o.ie.fromUint8ToStringArray(d):d,f="string"===i.dtype?o.ie.fromUint8ToStringArray(l):l,m=a||i.dtype,[h,b]=t(i.shape,c.shape,p,f,m);return u.makeTensorInfo(b,m,h)}:({inputs:e,backend:r})=>{const{a:o,b:s}=e,u=r;if("complex64"===o.dtype||"complex64"===s.dtype){const e=Object(i.a)({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,d=u.data.get(a.dataId).values,l=u.data.get(r.dataId).values,p=Object(i.a)({inputs:{x:s},backend:u,attrs:{dtype:"complex64"}}),f=u.data.get(p.dataId),m=f.complexTensorInfos.real,h=f.complexTensorInfos.imag,b=u.data.get(m.dataId).values,I=u.data.get(h.dataId).values,[g,k,T]=n(o.shape,s.shape,d,l,b,I),S=u.makeTensorInfo(T,"float32",g),y=u.makeTensorInfo(T,"float32",k),x=Object(c.a)({inputs:{real:S,imag:y},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(S),u.disposeIntermediateTensorInfo(y),x}{const e=u.data.get(o.dataId).values,n=u.data.get(s.dataId).values,r=a||o.dtype,[i,c]=t(o.shape,s.shape,e,n,r);return u.makeTensorInfo(c,r,i)}}}function r(e){return(t,n,a,r,s,i)=>{const c=o.ie.assertAndGetBroadcastShape(t,n),u=o.Si.sizeFromShape(c),d=c.length,l=o.Si.computeStrides(c),p=o.Si.getTypedArrayFromDType("float32",u),f=o.Si.getTypedArrayFromDType("float32",u),m=o.ie.getBroadcastDims(t,c),h=o.ie.getBroadcastDims(n,c),b=o.ie.mergeRealAndImagArrays(a,r),I=o.ie.mergeRealAndImagArrays(s,i),g=t.length,k=o.Si.computeStrides(t),T=n.length,S=o.Si.computeStrides(n);if(m.length+h.length===0)for(let o=0;o<p.length;o++){const t=o%b.length,n=o%I.length,a=e(b[2*t],b[2*t+1],I[2*n],I[2*n+1]);p[o]=a.real,f[o]=a.imag}else for(let y=0;y<p.length;y++){const t=o.Si.indexToLoc(y,d,l),n=t.slice(-g);m.forEach((e=>n[e]=0));const a=o.Si.locToIndex(n,g,k),r=t.slice(-T);h.forEach((e=>r[e]=0));const s=o.Si.locToIndex(r,T,S),i=e(b[2*a],b[2*a+1],I[2*s],I[2*s+1]);p[y]=i.real,f[y]=i.imag}return[p,f,c]}}var o,s,i,c;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r})),o=n(616),s=n(624),i=n(751),c=n(727)},682:function(e,t,n){"use strict";function a(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:i}=n;Object(o.a)(r,"transpose");const c=r.shape.length,u=Array(c);for(let o=0;o<u.length;o++)u[o]=r.shape[i[o]];const d=a.data.get(r.dataId).values,l=Object(s.a)(d,r.shape,r.dtype,i,u);return{dataId:a.write(l,u,r.dtype),shape:u,dtype:r.dtype}}var r,o,s;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i})),r=n(616),o=n(624),s=n(892);const i={kernelName:r.Jd,backendName:"cpu",kernelFunc:a}},697:function(e,t,n){"use strict";function a(e){return(t,n,a)=>{const o=r.Si.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)o[r]=e(t[r],a);return o}}n.d(t,"a",(function(){return a}));var r=n(616)},753:function(e,t,n){"use strict";function a(e,t,n,a,r,o){const s=r.strideHeight,c=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,l=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,h="max"===o?-1/0:1/0,b=Object(i.we)(r.outShape,n),I=b.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],k=r.outShape[2]*r.outShape[3],T=r.outShape[3];for(let i=0;i<r.batchSize;++i){const t=i*g,n=i*a[0];for(let i=0;i<r.inChannels;++i)for(let b=0;b<r.outHeight;++b){const g=b*s-f,S=Math.max(0,g),y=Math.min(r.inHeight,l+g),x=t+b*k;for(let t=0;t<r.outWidth;++t){const s=t*c-m,l=Math.max(0,s),f=Math.min(r.inWidth,p+s);let b=h,g=0,k=0;for(let t=S;t<y;t+=u){const r=n+t*a[1];for(let t=l;t<f;t+=d){const n=e[r+t*a[2]+i];"max"===o&&n>b?b=n:"avg"===o&&(g+=n,k++)}if(isNaN(b))break}I[x+t*T+i]="avg"===o?g/k:b}}}return b}function r(e,t,n,a,r=!1,o=!1){const s=Object(i.we)(a.outShape,"int32"),c=a.strideHeight,u=a.strideWidth,d=a.dilationHeight,l=a.dilationWidth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.top,h=a.padInfo.left,b=Object(i.we)(t,n,e);for(let i=0;i<a.batchSize;++i)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*c-m;let I=n;for(;I<0;)I+=d;const g=Math.min(a.inHeight,p+n);for(let c=0;c<a.outWidth;++c){const p=c*u-h;let m=p;for(;m<0;)m+=l;const k=Math.min(a.inWidth,f+p);let T=-1/0,S=-1;for(let t=I;t<g;t+=d){const s=t-n;for(let n=m;n<k;n+=l){const c=n-p,u=b.get(i,t,n,e);u>T&&(T=u,S=r?o?((i*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:s*f+c)}}s.set(S,i,t,c,e)}}return s}function o(e,t,n,a,r,o){const s=r.strideDepth,c=r.strideHeight,u=r.strideWidth,d=r.dilationDepth,l=r.dilationHeight,p=r.dilationWidth,f=r.effectiveFilterDepth,m=r.effectiveFilterHeight,h=r.effectiveFilterWidth,b=r.padInfo.front,I=r.padInfo.top,g=r.padInfo.left,k="max"===o?-1/0:1/0,T=Object(i.we)(r.outShape,n),S=T.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],x=r.outShape[2]*r.outShape[3]*r.outShape[4],O=r.outShape[3]*r.outShape[4],j=r.outShape[4];for(let i=0;i<r.batchSize;++i){const t=i*y,n=i*a[0];for(let i=0;i<r.inChannels;++i)for(let T=0;T<r.outDepth;++T){const y=T*s-b;let v=y;for(;v<0;)v+=d;const A=Math.min(r.inDepth,f+y),F=t+T*x;for(let t=0;t<r.outHeight;++t){const s=t*c-I;let f=s;for(;f<0;)f+=l;const b=Math.min(r.inHeight,m+s),T=F+t*O;for(let t=0;t<r.outWidth;++t){const s=t*u-g;let c=s;for(;c<0;)c+=p;const m=Math.min(r.inWidth,h+s),I=T+t*j;let y=k,x=0,O=0;for(let t=v;t<A;t+=d){const r=n+t*a[1];for(let t=f;t<b;t+=l){const n=r+t*a[2];for(let t=c;t<m;t+=p){const r=e[n+t*a[3]+i];if("max"===o&&r>y?y=r:"avg"===o&&(x+=r,O++),isNaN(y))break}if(isNaN(y))break}if(isNaN(y))break}S[I+i]="avg"===o?x/Math.max(O,1):y}}}}return T}function s(e,t){const n=Object(i.we)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=t.padInfo.front,m=t.padInfo.top,h=t.padInfo.left;for(let i=0;i<t.batchSize;++i)for(let b=0;b<t.inChannels;++b)for(let I=0;I<t.outDepth;++I){const g=I*a-f;let k=g;for(;k<0;)k+=s;const T=Math.min(t.inDepth,d+g);for(let a=0;a<t.outHeight;++a){const d=a*r-m;let f=d;for(;f<0;)f+=c;const S=Math.min(t.inHeight,l+d);for(let r=0;r<t.outWidth;++r){const m=r*o-h;let y=m;for(;y<0;)y+=u;const x=Math.min(t.inWidth,p+m);let O=-1/0,j=-1;for(let t=k;t<T;t+=s){const n=t-g;for(let a=f;a<S;a+=c){const r=a-d;for(let o=y;o<x;o+=u){const s=o-m,c=e.get(i,t,a,o,b);c>=O&&(O=c,j=n*l*p+r*l+s)}}}n.set(j,i,I,a,r,b)}}}return n}n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return r})),n.d(t,"d",(function(){return o})),n.d(t,"a",(function(){return s}));var i=n(616)},822:function(e,t,n){"use strict";var a,r,o;n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u})),a=n(616),r=n(655),o=n(663);const s=Object(r.a)(((e,t)=>e-t)),i=Object(o.b)(((e,t,n,a)=>({real:e-n,imag:t-a}))),c=Object(o.a)(a.zd,s,i),u={kernelName:a.zd,backendName:"cpu",kernelFunc:c}},824:function(e,t,n){"use strict";function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:l}=t,{axis:p,keepDims:f}=a;let m;Object(o.a)(l,"sum"),m="bool"===l.dtype?Object(i.a)({inputs:{x:l},backend:n,attrs:{dtype:"int32"}}):Object(c.a)({inputs:{x:l},backend:n});const h=m.shape.length,b=r.Si.parseAxisParam(p,m.shape),I=r.ie.getAxesPermutation(b,h);let g=b,k=m;null!=I&&(k=Object(d.a)({inputs:{x:m},backend:n,attrs:{perm:I}}),g=r.ie.getInnerMostAxes(g.length,h)),r.ie.assertAxesAreInnerMostDims("sum",g,k.shape.length);const[T,S]=r.ie.computeOutAndReduceShapes(k.shape,g),y=r.ie.upcastType(k.dtype,"int32");let x=Object(s.a)(n,T,y);const O=r.Si.sizeFromShape(S),j=n.data.get(x.dataId).values,v=n.data.get(k.dataId).values;for(let r=0;r<j.length;++r){const e=r*O;let t=0;for(let n=0;n<O;++n)t+=v[e+n];j[r]=t}if(f){const e=r.ie.expandShapeToKeepDim(x.shape,b),t=x;x=Object(u.a)({inputs:{x},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(m),null!=I&&n.disposeIntermediateTensorInfo(k),x}var r,o,s,i,c,u,d;n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return l})),r=n(616),o=n(624),s=n(1211),i=n(751),c=n(709),u=n(666),d=n(682);const l={kernelName:r.Ad,backendName:"cpu",kernelFunc:a}},892:function(e,t,n){"use strict";function a(e,t,n,a,o){const s=t.length,i=r.Si.sizeFromShape(t),c=r.Si.computeStrides(t),u=r.Si.computeStrides(o),d=r.Si.getTypedArrayFromDType(n,r.Si.sizeFromShape(o));for(let l=0;l<i;++l){const t=r.Si.indexToLoc(l,s,c),n=Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];d[r.Si.locToIndex(n,s,u)]=e[l]}return d}n.d(t,"a",(function(){return a}));var r=n(616)},986:function(e,t,n){"use strict";var a,r,o,s,i,c,u,d,l,p,f,m,h,b,I,g,k,T,S,y,x,O,j,v,A,F,N,w,M,D,W,z,H,E,R,B,C,q,L,V,G,P,U,J,K,Q,Z,$,X,Y;n.r(t),a=n(987),n.d(t,"simpleAbsImpl",(function(){return a.b})),r=n(750),n.d(t,"addImpl",(function(){return r.c})),o=n(820),n.d(t,"bincountImpl",(function(){return o.a})),n.d(t,"bincountReduceImpl",(function(){return o.b})),s=n(988),n.d(t,"bitwiseAndImpl",(function(){return s.b})),i=n(751),n.d(t,"castImpl",(function(){return i.c})),c=n(989),n.d(t,"ceilImpl",(function(){return c.b})),u=n(990),n.d(t,"concatImpl",(function(){return u.a})),d=n(890),n.d(t,"equalImpl",(function(){return d.c})),l=n(891),n.d(t,"expImpl",(function(){return l.c})),p=n(991),n.d(t,"expm1Impl",(function(){return p.b})),f=n(992),n.d(t,"floorImpl",(function(){return f.b})),m=n(993),n.d(t,"floorDivImpl",(function(){return m.b})),h=n(994),n.d(t,"gatherNdImpl",(function(){return h.a})),b=n(995),n.d(t,"gatherV2Impl",(function(){return b.a})),I=n(996),n.d(t,"greaterImpl",(function(){return I.b})),g=n(997),n.d(t,"greaterEqualImpl",(function(){return g.b})),k=n(998),n.d(t,"lessImpl",(function(){return k.b})),T=n(999),n.d(t,"lessEqualImpl",(function(){return T.b})),S=n(1e3),n.d(t,"linSpaceImpl",(function(){return S.a})),y=n(1001),n.d(t,"logImpl",(function(){return y.b})),x=n(1002),n.d(t,"maxImpl",(function(){return x.a})),O=n(1003),n.d(t,"maximumImpl",(function(){return O.b})),j=n(1004),n.d(t,"minimumImpl",(function(){return j.b})),v=n(752),n.d(t,"multiplyImpl",(function(){return v.c})),A=n(1005),n.d(t,"negImpl",(function(){return A.b})),F=n(1006),n.d(t,"notEqualImpl",(function(){return F.b})),N=n(1007),n.d(t,"prodImpl",(function(){return N.b})),w=n(1008),n.d(t,"raggedGatherImpl",(function(){return w.a})),M=n(1009),n.d(t,"raggedRangeImpl",(function(){return M.a})),D=n(1010),n.d(t,"raggedTensorToTensorImpl",(function(){return D.a})),W=n(1011),n.d(t,"rangeImpl",(function(){return W.a})),z=n(1012),n.d(t,"rsqrtImpl",(function(){return z.b})),H=n(821),n.d(t,"scatterImpl",(function(){return H.a})),E=n(893),n.d(t,"sigmoidImpl",(function(){return E.c})),R=n(728),n.d(t,"sliceImpl",(function(){return R.c})),B=n(1013),n.d(t,"sparseFillEmptyRowsImpl",(function(){return B.a})),C=n(1014),n.d(t,"sparseReshapeImpl",(function(){return C.a})),q=n(894),n.d(t,"sparseSegmentReductionImpl",(function(){return q.a})),L=n(1015),n.d(t,"sqrtImpl",(function(){return L.b})),V=n(1016),n.d(t,"squaredDifferenceImpl",(function(){return V.b})),G=n(1017),n.d(t,"staticRegexReplaceImpl",(function(){return G.b})),P=n(1018),n.d(t,"stridedSliceImpl",(function(){return P.a})),U=n(1019),n.d(t,"stringNGramsImpl",(function(){return U.a})),J=n(1020),n.d(t,"stringSplitImpl",(function(){return J.a})),K=n(1021),n.d(t,"stringToHashBucketFastImpl",(function(){return K.a})),Q=n(822),n.d(t,"subImpl",(function(){return Q.c})),Z=n(1022),n.d(t,"tileImpl",(function(){return Z.a})),$=n(1023),n.d(t,"topKImpl",(function(){return $.a})),X=n(892),n.d(t,"transposeImpl",(function(){return X.a})),Y=n(1024),n.d(t,"uniqueImpl",(function(){return Y.a}))}}]);